{
    "version": "https://jsonfeed.org/version/1",
    "title": "カレーうどん屋 • All posts by \"嵌入式开发\" tag",
    "description": "カレーうどん屋.",
    "home_page_url": "https://blog.udon.eu.org",
    "items": [
        {
            "id": "https://blog.udon.eu.org/archives/9b58c98e.html",
            "url": "https://blog.udon.eu.org/archives/9b58c98e.html",
            "title": "合宙 EPS32-C3 把玩记录（二）：WiFi 与一个 Web 程序",
            "date_published": "2022-03-26T16:15:00.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h2 id=\"了解一下相关的库\"><a href=\"#了解一下相关的库\" class=\"headerlink\" title=\"了解一下相关的库\"></a>了解一下相关的库</h2><ul>\n<li><h3 id=\"串口通信\"><a href=\"#串口通信\" class=\"headerlink\" title=\"串口通信\"></a>串口通信</h3></li>\n</ul>\n<p>这个库是自带的，不需要引入。</p>\n<p>据我的理解，单片机的串口就是控制台程序的控制台，可以返回一些信息给上位机。</p>\n<p>会用到的几个指令：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\">Serial.begin(Baudrate);\t<span class=\"hljs-comment\">//参数为串口通信的波特率</span><br>Serial.end();<br>Serial.read();\t\t\t<span class=\"hljs-comment\">//读取串口收到数据的第一个字节</span><br>Serial.peek();\t\t\t<span class=\"hljs-comment\">//读取串口数据中下一字节的内容</span><br>Serial.flush();\t\t\t<span class=\"hljs-comment\">//清空缓冲区</span><br>Serial.print/println();\t<span class=\"hljs-comment\">//不用多说</span><br>Serial.write();\t\t\t<span class=\"hljs-comment\">//写二进制数据</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><h3 id=\"WiFi-h\"><a href=\"#WiFi-h\" class=\"headerlink\" title=\"WiFi.h\"></a>WiFi.h</h3></li>\n</ul>\n<p><code>#include &lt;WiFi.h&gt;</code></p>\n<h4 id=\"AP（接入点）-Mode\"><a href=\"#AP（接入点）-Mode\" class=\"headerlink\" title=\"AP（接入点） Mode\"></a>AP（接入点） Mode</h4><p>创建一个接入点。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\">WiFi.mode(WiFi_AP);\t\t\t<span class=\"hljs-comment\">//设置工作在 AP 模式</span><br>WiFi.softAPConfig(local_IP, gateway, subnet);<br><span class=\"hljs-comment\">//定义本机 IP（这个不大确定）、网关 IP 和子网掩码</span><br><span class=\"hljs-comment\">//IPAddress 数据类型格式：IPAddress local_IP(192,168,4,22);</span><br>WiFi.softAP(SSID,PASSWD);\t<span class=\"hljs-comment\">//启动 AP，参数不多解释,返回 bool </span><br></code></pre></td></tr></table></figure>\n\n<p>更多函数见 <a href=\"https://blog.csdn.net/Naisu_kun/article/details/86165403#_28\">WiFi.h AP 常用方法说明</a></p>\n<h4 id=\"STA（站点）-Mode\"><a href=\"#STA（站点）-Mode\" class=\"headerlink\" title=\"STA（站点） Mode\"></a>STA（站点） Mode</h4><p>接入一个 AP。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\">WiFi.mode(WIFI_STA); \t\t<span class=\"hljs-comment\">//设置工作在 STA 模式</span><br>WiFi.start(SSID,PASSWD)\t\t<span class=\"hljs-comment\">//连接至 AP，参数不多解释</span><br>Serial.println(WiFi.localIP());\t\t<span class=\"hljs-comment\">//打印本机 IP，省的去路由器管理界面看</span><br></code></pre></td></tr></table></figure>\n\n<p>更多函数见 <a href=\"https://blog.csdn.net/Naisu_kun/article/details/86165403#_130\">WiFi.h STA 常用方法说明</a></p>\n<ul>\n<li><h2 id=\"WebServer-h\"><a href=\"#WebServer-h\" class=\"headerlink\" title=\"WebServer.h\"></a>WebServer.h</h2></li>\n</ul>\n<p><code>#include &lt;WebServer.h&gt;</code></p>\n<p>创建一个简单的网站服务器。真的很简单。</p>\n<p>一个个函数讲有点难理解，我放在这节的例程里面说明。</p>\n<h2 id=\"写一个测试程序吧\"><a href=\"#写一个测试程序吧\" class=\"headerlink\" title=\"写一个测试程序吧\"></a>写一个测试程序吧</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;WiFi.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;WebServer.h&gt;</span></span><br><span class=\"hljs-comment\">//引入所需要的两个库</span><br><br><span class=\"hljs-type\">const</span> <span class=\"hljs-type\">char</span> *SSID = <span class=\"hljs-string\">&quot;YOUR_SSID&quot;</span>;<br><span class=\"hljs-type\">const</span> <span class=\"hljs-type\">char</span> *PASSWORD = <span class=\"hljs-string\">&quot;YOUR_PASSWORD&quot;</span>;<br><br>WebServer <span class=\"hljs-title function_\">server</span><span class=\"hljs-params\">(<span class=\"hljs-number\">80</span>)</span>;\t\t<span class=\"hljs-comment\">//网站服务器将运行在 80 端口</span><br><br><span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">handleIndex</span><span class=\"hljs-params\">()</span>\t\t\t<span class=\"hljs-comment\">//收到 HTTP 请求的回调函数</span><br>&#123;<br>    server.send(<span class=\"hljs-number\">200</span>, <span class=\"hljs-string\">&quot;text/plain&quot;</span>, <span class=\"hljs-string\">&quot;Hello from ESP32!&quot;</span>);<br>    <span class=\"hljs-comment\">//发送 HTTP 相应，内容分别为：状态码，Content-Type，响应体</span><br>&#125;<br><br><span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">setup</span><span class=\"hljs-params\">()</span><br>&#123;<br>    Serial.begin(<span class=\"hljs-number\">9600</span>);\t\t<span class=\"hljs-comment\">//开启串口，波特率设置为 9600</span><br>    Serial.println();<br><br>    WiFi.mode(WIFI_STA);\t<span class=\"hljs-comment\">//设置工作在 STA 模式</span><br>    WiFi.begin(SSID, PASSWORD);\t\t\t\t<span class=\"hljs-comment\">//连接至指定 AP</span><br>    <span class=\"hljs-keyword\">while</span> (WiFi.status() != WL_CONNECTED) \t<span class=\"hljs-comment\">//等待网络连接成功</span><br>    &#123;<br>        delay(<span class=\"hljs-number\">500</span>);<br>        Serial.print(<span class=\"hljs-string\">&quot;.&quot;</span>);\t<span class=\"hljs-comment\">//将连接信息输出至串口</span><br>    &#125;<br>    Serial.println(<span class=\"hljs-string\">&quot;WiFi connected!&quot;</span>);<br><br>    Serial.println(<span class=\"hljs-string\">&quot;IP address: &quot;</span>);<br>    Serial.println(WiFi.localIP()); \t\t<span class=\"hljs-comment\">//打印本机 IP</span><br><br>    server.on(<span class=\"hljs-string\">&quot;/&quot;</span>, handleIndex);\t\t\t<span class=\"hljs-comment\">//注册链接（类似与注册一个路由），并选择回调函数</span><br>    <span class=\"hljs-comment\">//同样的，还可以注册别的链接，如</span><br>    <span class=\"hljs-comment\">//server.on(&quot;/test&quot;, handleIndexTest);</span><br>  <br>    server.begin();\t\t\t<span class=\"hljs-comment\">//开启 HTTP 服务器</span><br>    Serial.println(<span class=\"hljs-string\">&quot;WebServer begin!&quot;</span>);<br>&#125;<br><br><span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">loop</span><span class=\"hljs-params\">()</span><br>&#123;<br>    server.handleClient();\t<span class=\"hljs-comment\">//不断相应 HTTP 请求</span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>访问串口返回的 IP，即可看到 <code>Hello from ESP32!</code> 这句话啦。</p>\n<h2 id=\"还有个-Web-Server-叫-ESPAsyncWebServer\"><a href=\"#还有个-Web-Server-叫-ESPAsyncWebServer\" class=\"headerlink\" title=\"还有个 Web Server 叫 ESPAsyncWebServer\"></a>还有个 Web Server 叫 ESPAsyncWebServer</h2><p>自带的 WebServer 是同步的，只支持处理一个连接。对于这种体量的机器其实足够了。</p>\n<p>顺便学习一下一个第三方库吧。</p>\n<h3 id=\"添加库\"><a href=\"#添加库\" class=\"headerlink\" title=\"添加库\"></a>添加库</h3><p>对于这款 ESP32，需要下载并导入两个库（源码 ZIP 即可）：</p>\n<p><a href=\"https://github.com/me-no-dev/AsyncTCP\">me-no-dev&#x2F;AsyncTCP: Async TCP Library for ESP32</a></p>\n<p><a href=\"https://github.com/me-no-dev/ESPAsyncWebServer\">me-no-dev&#x2F;ESPAsyncWebServer: Async Web Server for ESP8266 and ESP32</a></p>\n<p>在 Arduino 的<code>项目 &gt; 加载库 &gt; 添加 .ZIP 库</code>中导入这两个库。</p>\n<h3 id=\"用-ESPAsyncWebServer-重写刚刚的例程吧\"><a href=\"#用-ESPAsyncWebServer-重写刚刚的例程吧\" class=\"headerlink\" title=\"用 ESPAsyncWebServer 重写刚刚的例程吧\"></a>用 ESPAsyncWebServer 重写刚刚的例程吧</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;WiFi.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;ESPAsyncWebServer.h&gt;</span></span><br><span class=\"hljs-comment\">//注意替换为新的库</span><br><br><span class=\"hljs-type\">const</span> <span class=\"hljs-type\">char</span> *SSID = <span class=\"hljs-string\">&quot;YOUR_SSID&quot;</span>;<br><span class=\"hljs-type\">const</span> <span class=\"hljs-type\">char</span> *PASSWORD = <span class=\"hljs-string\">&quot;YOUR_PASSWORD&quot;</span>;<br><br>ESPAsyncWebServer <span class=\"hljs-title function_\">server</span><span class=\"hljs-params\">(<span class=\"hljs-number\">80</span>)</span>;\t\t        <span class=\"hljs-comment\">//同样替换为新的对象</span><br><br><span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">handleIndex</span><span class=\"hljs-params\">(AsyncWebServerRequest *request)</span>        <span class=\"hljs-comment\">//回调函数有更改</span><br>&#123;<br>    request-&gt;send(<span class=\"hljs-number\">200</span>, <span class=\"hljs-string\">&quot;text/plain&quot;</span>, <span class=\"hljs-string\">&quot;Hello, world!&quot;</span>);<br>    <span class=\"hljs-comment\">//发送 HTTP 相应，内容相同</span><br>&#125;<br><br><span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">setup</span><span class=\"hljs-params\">()</span><br>&#123;<br>    Serial.begin(<span class=\"hljs-number\">9600</span>);\t\t<span class=\"hljs-comment\">//开启串口，波特率设置为 9600</span><br>    Serial.println();<br><br>    WiFi.mode(WIFI_STA);\t<span class=\"hljs-comment\">//设置工作在 STA 模式</span><br>    WiFi.begin(SSID, PASSWORD);\t\t\t\t<span class=\"hljs-comment\">//连接至指定 AP</span><br>    <span class=\"hljs-keyword\">while</span> (WiFi.status() != WL_CONNECTED) \t<span class=\"hljs-comment\">//等待网络连接成功</span><br>    &#123;<br>        delay(<span class=\"hljs-number\">500</span>);<br>        Serial.print(<span class=\"hljs-string\">&quot;.&quot;</span>);\t<span class=\"hljs-comment\">//将连接信息输出至串口</span><br>    &#125;<br>    Serial.println(<span class=\"hljs-string\">&quot;WiFi connected!&quot;</span>);<br><br>    Serial.println(<span class=\"hljs-string\">&quot;IP address: &quot;</span>);<br>    Serial.println(WiFi.localIP()); \t\t<span class=\"hljs-comment\">//打印本机 IP</span><br><br>    server.on(<span class=\"hljs-string\">&quot;/&quot;</span>, handleIndex);\t\t\t<span class=\"hljs-comment\">//注册链接（类似与注册一个路由），并选择回调函数</span><br>    <span class=\"hljs-comment\">//同样的，还可以注册别的链接，如</span><br>    <span class=\"hljs-comment\">//server.on(&quot;/test&quot;, handleIndexTest);</span><br>  <br>    server.begin();\t\t\t<span class=\"hljs-comment\">//开启 HTTP 服务器</span><br>    Serial.println(<span class=\"hljs-string\">&quot;WebServer begin!&quot;</span>);<br>&#125;<br><br><span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">loop</span><span class=\"hljs-params\">()</span><br>&#123;<br><span class=\"hljs-comment\">//不用在这儿监听 HTTP 请求了</span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>理论上来讲，上面的代码应该是正确的……</p>\n<p>但 Arduino 在编译的时候报错，内容是 ESPAsyncWebServer 库中的某些代码。</p>\n<p>有待我弄清楚出错的原因。</p>\n",
            "tags": [
                "教程",
                "嵌入式开发"
            ]
        },
        {
            "id": "https://blog.udon.eu.org/archives/7f7bd4a5.html",
            "url": "https://blog.udon.eu.org/archives/7f7bd4a5.html",
            "title": "合宙 EPS32-C3 把玩记录（一）：环境搭建与第一个程序",
            "date_published": "2022-03-26T09:30:00.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><p>为了贯彻本博客最重要的关键词：<strong>性价比</strong>，我看到性价如此高的开发板，想都没想就剁手了。</p>\n<p>嘛其实也没有这么冲动，我在购买 3D 打印机之后就一直在计划着做一些网上现成的电子项目，但碍于这段时间 MCU 和大尺寸屏幕价格的飙升，一直没能开始动手。</p>\n<p>正好最近我学习了 iPad 上的 3D 建模软件 Sharp3D，项目的外壳建模变得有可能；又遇到了这块便宜的板子，立即开工！</p>\n<p>因为1.8寸的 TFT 显示屏还没到货，3D 建模就先放一边，先来研究一下这块开发板。</p>\n<h3 id=\"事先声明\"><a href=\"#事先声明\" class=\"headerlink\" title=\"事先声明\"></a>事先声明</h3><p>本教程是我一边从零开始学习嵌入式开发一边作成的，有逻辑混乱、内容浅显和成吨的错误，还请已经熟悉嵌入式开发的大佬多多包涵与斧正）</p>\n<h2 id=\"问题：什么？开发环境不是按语言分的嘛？\"><a href=\"#问题：什么？开发环境不是按语言分的嘛？\" class=\"headerlink\" title=\"问题：什么？开发环境不是按语言分的嘛？\"></a>问题：什么？开发环境不是按语言分的嘛？</h2><p>在开始学习嵌入式开发之前，我简单地认为嵌入式开发因语言而已，分为用 C&#x2F;Cpp 开发（Arduino）和用 Python 开发（MicroPython）。</p>\n<p>直到我遇见了 ESP-IDF 这个东西。</p>\n<p>啥啊，为啥这家伙用的也是 C，代码我还一点都看不懂。</p>\n<h3 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h3><p>嵌入式开发选用的语言和语法因选择的框架而异。</p>\n<p>ESP-EDF 更靠近底层，因而编写更复杂；Arduino 对底层进行封装，更靠上层且对用户更友好；MicroPython 则是在开发板上还原了一个 Python 的开发环境，继承了 Python 的诸多优点（简单的语法、无需编译就能执行新代码等）。</p>\n<p>此外，还能用 JS、Java、Lua 等等语言进行开发。</p>\n<h3 id=\"我的选择\"><a href=\"#我的选择\" class=\"headerlink\" title=\"我的选择\"></a>我的选择</h3><p>我手上有两块板子，一块被我刷成了 MicroPython，但目前不打算去用它。</p>\n<p>我打算用 Arduino + C 进行开发。</p>\n<h3 id=\"配置-VSCode-Arduino-开发环境\"><a href=\"#配置-VSCode-Arduino-开发环境\" class=\"headerlink\" title=\"配置 VSCode + Arduino 开发环境\"></a>配置 VSCode + Arduino 开发环境</h3><p>Arduino 没有代码补全，太难用。简述一下如何使用 VSCode 进行开发：</p>\n<ul>\n<li>VSC 安装 Arduino 插件；</li>\n<li>在 首选项-设置 中配置 Arduino 的路径 <code>Arduino.path</code></li>\n<li>打开项目后选择 MCU 类型和串口</li>\n</ul>\n<p>就能用啦。</p>\n<h2 id=\"第一个项目\"><a href=\"#第一个项目\" class=\"headerlink\" title=\"第一个项目\"></a>第一个项目</h2><p>第一个项目就不选输出 Hello World 了，一点硬件的感觉都没有。</p>\n<p>据<a href=\"https://wiki.luatos.com/chips/esp32c3/board.html\"> 官方文档 </a>，主板板载的两个 LED 灯对应的 GPIO 为 <code>IO12 IO13</code>，高电平有效。</p>\n<p>就此编写一个<del>无稳态多协振荡电路</del>让 LED 灯交替闪烁的程序：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">setup</span><span class=\"hljs-params\">()</span>                 <span class=\"hljs-comment\">//初始化函数，只会在开发板上电或复位时被调用一次</span><br>&#123; <br>  pinMode(<span class=\"hljs-number\">12</span>, OUTPUT);       <span class=\"hljs-comment\">//初始化 IO12 为输出口</span><br>  pinMode(<span class=\"hljs-number\">13</span>, OUTPUT);       <span class=\"hljs-comment\">//初始化 IO13 为输出口</span><br>  digitalWrite(<span class=\"hljs-number\">12</span>, LOW);     <span class=\"hljs-comment\">//初始化设为低电平，则灯灭</span><br>  digitalWrite(<span class=\"hljs-number\">13</span>, LOW);     <span class=\"hljs-comment\">//初始化设为低电平，则灯灭</span><br>&#125;<br><br><span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">loop</span><span class=\"hljs-params\">()</span>                  <span class=\"hljs-comment\">//上电之后一直循环执行的函数</span><br>&#123; digitalWrite(<span class=\"hljs-number\">12</span>, HIGH);    <span class=\"hljs-comment\">//亮左灯</span><br>  digitalWrite(<span class=\"hljs-number\">13</span>, LOW);     <span class=\"hljs-comment\">//关右灯</span><br>  delay(<span class=\"hljs-number\">1000</span>);               <span class=\"hljs-comment\">//等待1秒</span><br>  digitalWrite(<span class=\"hljs-number\">12</span>, LOW);     <span class=\"hljs-comment\">//关左灯</span><br>  digitalWrite(<span class=\"hljs-number\">13</span>, HIGH);    <span class=\"hljs-comment\">//亮右灯</span><br>  delay(<span class=\"hljs-number\">1000</span>);               <span class=\"hljs-comment\">//等待1秒</span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>编译+上传即可。</p>\n<p>结果就不展示了，两个灯在交替闪烁。</p>\n",
            "tags": [
                "教程",
                "嵌入式开发"
            ]
        }
    ]
}