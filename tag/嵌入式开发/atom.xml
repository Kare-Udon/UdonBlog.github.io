<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.udon.eu.org</id>
    <title>カレーうどん屋 • Posts by &#34;嵌入式开发&#34; tag</title>
    <link href="https://blog.udon.eu.org" />
    <updated>2022-03-26T16:15:00.000Z</updated>
    <category term="教程" />
    <category term="随笔" />
    <category term="软件" />
    <category term="小鸡测评" />
    <category term="3D 打印" />
    <category term="嵌入式开发" />
    <category term="GitHub Actions" />
    <category term="Hexo" />
    <category term="DIY" />
    <entry>
        <id>https://blog.udon.eu.org/archives/9b58c98e.html</id>
        <title>合宙 EPS32-C3 把玩记录（二）：WiFi 与一个 Web 程序</title>
        <link rel="alternate" href="https://blog.udon.eu.org/archives/9b58c98e.html"/>
        <content type="html">&lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;/assets/css/APlayer.min.css&#34;&gt;&lt;script src=&#34;/assets/js/APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;script class=&#34;meting-secondary-script-marker&#34; src=&#34;/assets/js/Meting.min.js&#34;&gt;&lt;/script&gt;&lt;h2 id=&#34;了解一下相关的库&#34;&gt;&lt;a href=&#34;#了解一下相关的库&#34; class=&#34;headerlink&#34; title=&#34;了解一下相关的库&#34;&gt;&lt;/a&gt;了解一下相关的库&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&#34;串口通信&#34;&gt;&lt;a href=&#34;#串口通信&#34; class=&#34;headerlink&#34; title=&#34;串口通信&#34;&gt;&lt;/a&gt;串口通信&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个库是自带的，不需要引入。&lt;/p&gt;
&lt;p&gt;据我的理解，单片机的串口就是控制台程序的控制台，可以返回一些信息给上位机。&lt;/p&gt;
&lt;p&gt;会用到的几个指令：&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;Serial.begin(Baudrate);	&lt;span class=&#34;hljs-comment&#34;&gt;//参数为串口通信的波特率&lt;/span&gt;&lt;br&gt;Serial.end();&lt;br&gt;Serial.read();			&lt;span class=&#34;hljs-comment&#34;&gt;//读取串口收到数据的第一个字节&lt;/span&gt;&lt;br&gt;Serial.peek();			&lt;span class=&#34;hljs-comment&#34;&gt;//读取串口数据中下一字节的内容&lt;/span&gt;&lt;br&gt;Serial.flush();			&lt;span class=&#34;hljs-comment&#34;&gt;//清空缓冲区&lt;/span&gt;&lt;br&gt;Serial.print/println();	&lt;span class=&#34;hljs-comment&#34;&gt;//不用多说&lt;/span&gt;&lt;br&gt;Serial.write();			&lt;span class=&#34;hljs-comment&#34;&gt;//写二进制数据&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&#34;WiFi-h&#34;&gt;&lt;a href=&#34;#WiFi-h&#34; class=&#34;headerlink&#34; title=&#34;WiFi.h&#34;&gt;&lt;/a&gt;WiFi.h&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;#include &amp;lt;WiFi.h&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;AP（接入点）-Mode&#34;&gt;&lt;a href=&#34;#AP（接入点）-Mode&#34; class=&#34;headerlink&#34; title=&#34;AP（接入点） Mode&#34;&gt;&lt;/a&gt;AP（接入点） Mode&lt;/h4&gt;&lt;p&gt;创建一个接入点。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;WiFi.mode(WiFi_AP);			&lt;span class=&#34;hljs-comment&#34;&gt;//设置工作在 AP 模式&lt;/span&gt;&lt;br&gt;WiFi.softAPConfig(local_IP, gateway, subnet);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//定义本机 IP（这个不大确定）、网关 IP 和子网掩码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//IPAddress 数据类型格式：IPAddress local_IP(192,168,4,22);&lt;/span&gt;&lt;br&gt;WiFi.softAP(SSID,PASSWD);	&lt;span class=&#34;hljs-comment&#34;&gt;//启动 AP，参数不多解释,返回 bool &lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;更多函数见 &lt;a href=&#34;https://blog.csdn.net/Naisu_kun/article/details/86165403#_28&#34;&gt;WiFi.h AP 常用方法说明&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;STA（站点）-Mode&#34;&gt;&lt;a href=&#34;#STA（站点）-Mode&#34; class=&#34;headerlink&#34; title=&#34;STA（站点） Mode&#34;&gt;&lt;/a&gt;STA（站点） Mode&lt;/h4&gt;&lt;p&gt;接入一个 AP。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;WiFi.mode(WIFI_STA); 		&lt;span class=&#34;hljs-comment&#34;&gt;//设置工作在 STA 模式&lt;/span&gt;&lt;br&gt;WiFi.start(SSID,PASSWD)		&lt;span class=&#34;hljs-comment&#34;&gt;//连接至 AP，参数不多解释&lt;/span&gt;&lt;br&gt;Serial.println(WiFi.localIP());		&lt;span class=&#34;hljs-comment&#34;&gt;//打印本机 IP，省的去路由器管理界面看&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;更多函数见 &lt;a href=&#34;https://blog.csdn.net/Naisu_kun/article/details/86165403#_130&#34;&gt;WiFi.h STA 常用方法说明&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&#34;WebServer-h&#34;&gt;&lt;a href=&#34;#WebServer-h&#34; class=&#34;headerlink&#34; title=&#34;WebServer.h&#34;&gt;&lt;/a&gt;WebServer.h&lt;/h2&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;#include &amp;lt;WebServer.h&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;创建一个简单的网站服务器。真的很简单。&lt;/p&gt;
&lt;p&gt;一个个函数讲有点难理解，我放在这节的例程里面说明。&lt;/p&gt;
&lt;h2 id=&#34;写一个测试程序吧&#34;&gt;&lt;a href=&#34;#写一个测试程序吧&#34; class=&#34;headerlink&#34; title=&#34;写一个测试程序吧&#34;&gt;&lt;/a&gt;写一个测试程序吧&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;lt;WiFi.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;lt;WebServer.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//引入所需要的两个库&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; *SSID = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;YOUR_SSID&amp;quot;&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; *PASSWORD = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;YOUR_PASSWORD&amp;quot;&lt;/span&gt;;&lt;br&gt;&lt;br&gt;WebServer &lt;span class=&#34;hljs-title function_&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-number&#34;&gt;80&lt;/span&gt;)&lt;/span&gt;;		&lt;span class=&#34;hljs-comment&#34;&gt;//网站服务器将运行在 80 端口&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;handleIndex&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;			&lt;span class=&#34;hljs-comment&#34;&gt;//收到 HTTP 请求的回调函数&lt;/span&gt;&lt;br&gt;&amp;#123;&lt;br&gt;    server.send(&lt;span class=&#34;hljs-number&#34;&gt;200&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;text/plain&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Hello from ESP32!&amp;quot;&lt;/span&gt;);&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//发送 HTTP 相应，内容分别为：状态码，Content-Type，响应体&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;br&gt;&amp;#123;&lt;br&gt;    Serial.begin(&lt;span class=&#34;hljs-number&#34;&gt;9600&lt;/span&gt;);		&lt;span class=&#34;hljs-comment&#34;&gt;//开启串口，波特率设置为 9600&lt;/span&gt;&lt;br&gt;    Serial.println();&lt;br&gt;&lt;br&gt;    WiFi.mode(WIFI_STA);	&lt;span class=&#34;hljs-comment&#34;&gt;//设置工作在 STA 模式&lt;/span&gt;&lt;br&gt;    WiFi.begin(SSID, PASSWORD);				&lt;span class=&#34;hljs-comment&#34;&gt;//连接至指定 AP&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt; (WiFi.status() != WL_CONNECTED) 	&lt;span class=&#34;hljs-comment&#34;&gt;//等待网络连接成功&lt;/span&gt;&lt;br&gt;    &amp;#123;&lt;br&gt;        delay(&lt;span class=&#34;hljs-number&#34;&gt;500&lt;/span&gt;);&lt;br&gt;        Serial.print(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;);	&lt;span class=&#34;hljs-comment&#34;&gt;//将连接信息输出至串口&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;    Serial.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;WiFi connected!&amp;quot;&lt;/span&gt;);&lt;br&gt;&lt;br&gt;    Serial.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;IP address: &amp;quot;&lt;/span&gt;);&lt;br&gt;    Serial.println(WiFi.localIP()); 		&lt;span class=&#34;hljs-comment&#34;&gt;//打印本机 IP&lt;/span&gt;&lt;br&gt;&lt;br&gt;    server.on(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;, handleIndex);			&lt;span class=&#34;hljs-comment&#34;&gt;//注册链接（类似与注册一个路由），并选择回调函数&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//同样的，还可以注册别的链接，如&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//server.on(&amp;quot;/test&amp;quot;, handleIndexTest);&lt;/span&gt;&lt;br&gt;  &lt;br&gt;    server.begin();			&lt;span class=&#34;hljs-comment&#34;&gt;//开启 HTTP 服务器&lt;/span&gt;&lt;br&gt;    Serial.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;WebServer begin!&amp;quot;&lt;/span&gt;);&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;loop&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;br&gt;&amp;#123;&lt;br&gt;    server.handleClient();	&lt;span class=&#34;hljs-comment&#34;&gt;//不断相应 HTTP 请求&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;访问串口返回的 IP，即可看到 &lt;code&gt;Hello from ESP32!&lt;/code&gt; 这句话啦。&lt;/p&gt;
&lt;h2 id=&#34;还有个-Web-Server-叫-ESPAsyncWebServer&#34;&gt;&lt;a href=&#34;#还有个-Web-Server-叫-ESPAsyncWebServer&#34; class=&#34;headerlink&#34; title=&#34;还有个 Web Server 叫 ESPAsyncWebServer&#34;&gt;&lt;/a&gt;还有个 Web Server 叫 ESPAsyncWebServer&lt;/h2&gt;&lt;p&gt;自带的 WebServer 是同步的，只支持处理一个连接。对于这种体量的机器其实足够了。&lt;/p&gt;
&lt;p&gt;顺便学习一下一个第三方库吧。&lt;/p&gt;
&lt;h3 id=&#34;添加库&#34;&gt;&lt;a href=&#34;#添加库&#34; class=&#34;headerlink&#34; title=&#34;添加库&#34;&gt;&lt;/a&gt;添加库&lt;/h3&gt;&lt;p&gt;对于这款 ESP32，需要下载并导入两个库（源码 ZIP 即可）：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/me-no-dev/AsyncTCP&#34;&gt;me-no-dev&amp;#x2F;AsyncTCP: Async TCP Library for ESP32&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/me-no-dev/ESPAsyncWebServer&#34;&gt;me-no-dev&amp;#x2F;ESPAsyncWebServer: Async Web Server for ESP8266 and ESP32&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在 Arduino 的&lt;code&gt;项目 &amp;gt; 加载库 &amp;gt; 添加 .ZIP 库&lt;/code&gt;中导入这两个库。&lt;/p&gt;
&lt;h3 id=&#34;用-ESPAsyncWebServer-重写刚刚的例程吧&#34;&gt;&lt;a href=&#34;#用-ESPAsyncWebServer-重写刚刚的例程吧&#34; class=&#34;headerlink&#34; title=&#34;用 ESPAsyncWebServer 重写刚刚的例程吧&#34;&gt;&lt;/a&gt;用 ESPAsyncWebServer 重写刚刚的例程吧&lt;/h3&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;lt;WiFi.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;lt;ESPAsyncWebServer.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//注意替换为新的库&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; *SSID = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;YOUR_SSID&amp;quot;&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; *PASSWORD = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;YOUR_PASSWORD&amp;quot;&lt;/span&gt;;&lt;br&gt;&lt;br&gt;ESPAsyncWebServer &lt;span class=&#34;hljs-title function_&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-number&#34;&gt;80&lt;/span&gt;)&lt;/span&gt;;		        &lt;span class=&#34;hljs-comment&#34;&gt;//同样替换为新的对象&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;handleIndex&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(AsyncWebServerRequest *request)&lt;/span&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//回调函数有更改&lt;/span&gt;&lt;br&gt;&amp;#123;&lt;br&gt;    request-&amp;gt;send(&lt;span class=&#34;hljs-number&#34;&gt;200&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;text/plain&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;);&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//发送 HTTP 相应，内容相同&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;br&gt;&amp;#123;&lt;br&gt;    Serial.begin(&lt;span class=&#34;hljs-number&#34;&gt;9600&lt;/span&gt;);		&lt;span class=&#34;hljs-comment&#34;&gt;//开启串口，波特率设置为 9600&lt;/span&gt;&lt;br&gt;    Serial.println();&lt;br&gt;&lt;br&gt;    WiFi.mode(WIFI_STA);	&lt;span class=&#34;hljs-comment&#34;&gt;//设置工作在 STA 模式&lt;/span&gt;&lt;br&gt;    WiFi.begin(SSID, PASSWORD);				&lt;span class=&#34;hljs-comment&#34;&gt;//连接至指定 AP&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt; (WiFi.status() != WL_CONNECTED) 	&lt;span class=&#34;hljs-comment&#34;&gt;//等待网络连接成功&lt;/span&gt;&lt;br&gt;    &amp;#123;&lt;br&gt;        delay(&lt;span class=&#34;hljs-number&#34;&gt;500&lt;/span&gt;);&lt;br&gt;        Serial.print(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;);	&lt;span class=&#34;hljs-comment&#34;&gt;//将连接信息输出至串口&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;    Serial.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;WiFi connected!&amp;quot;&lt;/span&gt;);&lt;br&gt;&lt;br&gt;    Serial.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;IP address: &amp;quot;&lt;/span&gt;);&lt;br&gt;    Serial.println(WiFi.localIP()); 		&lt;span class=&#34;hljs-comment&#34;&gt;//打印本机 IP&lt;/span&gt;&lt;br&gt;&lt;br&gt;    server.on(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;, handleIndex);			&lt;span class=&#34;hljs-comment&#34;&gt;//注册链接（类似与注册一个路由），并选择回调函数&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//同样的，还可以注册别的链接，如&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//server.on(&amp;quot;/test&amp;quot;, handleIndexTest);&lt;/span&gt;&lt;br&gt;  &lt;br&gt;    server.begin();			&lt;span class=&#34;hljs-comment&#34;&gt;//开启 HTTP 服务器&lt;/span&gt;&lt;br&gt;    Serial.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;WebServer begin!&amp;quot;&lt;/span&gt;);&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;loop&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;br&gt;&amp;#123;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//不用在这儿监听 HTTP 请求了&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;理论上来讲，上面的代码应该是正确的……&lt;/p&gt;
&lt;p&gt;但 Arduino 在编译的时候报错，内容是 ESPAsyncWebServer 库中的某些代码。&lt;/p&gt;
&lt;p&gt;有待我弄清楚出错的原因。&lt;/p&gt;
</content>
        <category term="教程" />
        <category term="嵌入式开发" />
        <updated>2022-03-26T16:15:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.udon.eu.org/archives/7f7bd4a5.html</id>
        <title>合宙 EPS32-C3 把玩记录（一）：环境搭建与第一个程序</title>
        <link rel="alternate" href="https://blog.udon.eu.org/archives/7f7bd4a5.html"/>
        <content type="html">&lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;/assets/css/APlayer.min.css&#34;&gt;&lt;script src=&#34;/assets/js/APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;script class=&#34;meting-secondary-script-marker&#34; src=&#34;/assets/js/Meting.min.js&#34;&gt;&lt;/script&gt;&lt;p&gt;为了贯彻本博客最重要的关键词：&lt;strong&gt;性价比&lt;/strong&gt;，我看到性价如此高的开发板，想都没想就剁手了。&lt;/p&gt;
&lt;p&gt;嘛其实也没有这么冲动，我在购买 3D 打印机之后就一直在计划着做一些网上现成的电子项目，但碍于这段时间 MCU 和大尺寸屏幕价格的飙升，一直没能开始动手。&lt;/p&gt;
&lt;p&gt;正好最近我学习了 iPad 上的 3D 建模软件 Sharp3D，项目的外壳建模变得有可能；又遇到了这块便宜的板子，立即开工！&lt;/p&gt;
&lt;p&gt;因为1.8寸的 TFT 显示屏还没到货，3D 建模就先放一边，先来研究一下这块开发板。&lt;/p&gt;
&lt;h3 id=&#34;事先声明&#34;&gt;&lt;a href=&#34;#事先声明&#34; class=&#34;headerlink&#34; title=&#34;事先声明&#34;&gt;&lt;/a&gt;事先声明&lt;/h3&gt;&lt;p&gt;本教程是我一边从零开始学习嵌入式开发一边作成的，有逻辑混乱、内容浅显和成吨的错误，还请已经熟悉嵌入式开发的大佬多多包涵与斧正）&lt;/p&gt;
&lt;h2 id=&#34;问题：什么？开发环境不是按语言分的嘛？&#34;&gt;&lt;a href=&#34;#问题：什么？开发环境不是按语言分的嘛？&#34; class=&#34;headerlink&#34; title=&#34;问题：什么？开发环境不是按语言分的嘛？&#34;&gt;&lt;/a&gt;问题：什么？开发环境不是按语言分的嘛？&lt;/h2&gt;&lt;p&gt;在开始学习嵌入式开发之前，我简单地认为嵌入式开发因语言而已，分为用 C&amp;#x2F;Cpp 开发（Arduino）和用 Python 开发（MicroPython）。&lt;/p&gt;
&lt;p&gt;直到我遇见了 ESP-IDF 这个东西。&lt;/p&gt;
&lt;p&gt;啥啊，为啥这家伙用的也是 C，代码我还一点都看不懂。&lt;/p&gt;
&lt;h3 id=&#34;解答&#34;&gt;&lt;a href=&#34;#解答&#34; class=&#34;headerlink&#34; title=&#34;解答&#34;&gt;&lt;/a&gt;解答&lt;/h3&gt;&lt;p&gt;嵌入式开发选用的语言和语法因选择的框架而异。&lt;/p&gt;
&lt;p&gt;ESP-EDF 更靠近底层，因而编写更复杂；Arduino 对底层进行封装，更靠上层且对用户更友好；MicroPython 则是在开发板上还原了一个 Python 的开发环境，继承了 Python 的诸多优点（简单的语法、无需编译就能执行新代码等）。&lt;/p&gt;
&lt;p&gt;此外，还能用 JS、Java、Lua 等等语言进行开发。&lt;/p&gt;
&lt;h3 id=&#34;我的选择&#34;&gt;&lt;a href=&#34;#我的选择&#34; class=&#34;headerlink&#34; title=&#34;我的选择&#34;&gt;&lt;/a&gt;我的选择&lt;/h3&gt;&lt;p&gt;我手上有两块板子，一块被我刷成了 MicroPython，但目前不打算去用它。&lt;/p&gt;
&lt;p&gt;我打算用 Arduino + C 进行开发。&lt;/p&gt;
&lt;h3 id=&#34;配置-VSCode-Arduino-开发环境&#34;&gt;&lt;a href=&#34;#配置-VSCode-Arduino-开发环境&#34; class=&#34;headerlink&#34; title=&#34;配置 VSCode + Arduino 开发环境&#34;&gt;&lt;/a&gt;配置 VSCode + Arduino 开发环境&lt;/h3&gt;&lt;p&gt;Arduino 没有代码补全，太难用。简述一下如何使用 VSCode 进行开发：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VSC 安装 Arduino 插件；&lt;/li&gt;
&lt;li&gt;在 首选项-设置 中配置 Arduino 的路径 &lt;code&gt;Arduino.path&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;打开项目后选择 MCU 类型和串口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;就能用啦。&lt;/p&gt;
&lt;h2 id=&#34;第一个项目&#34;&gt;&lt;a href=&#34;#第一个项目&#34; class=&#34;headerlink&#34; title=&#34;第一个项目&#34;&gt;&lt;/a&gt;第一个项目&lt;/h2&gt;&lt;p&gt;第一个项目就不选输出 Hello World 了，一点硬件的感觉都没有。&lt;/p&gt;
&lt;p&gt;据&lt;a href=&#34;https://wiki.luatos.com/chips/esp32c3/board.html&#34;&gt; 官方文档 &lt;/a&gt;，主板板载的两个 LED 灯对应的 GPIO 为 &lt;code&gt;IO12 IO13&lt;/code&gt;，高电平有效。&lt;/p&gt;
&lt;p&gt;就此编写一个&lt;del&gt;无稳态多协振荡电路&lt;/del&gt;让 LED 灯交替闪烁的程序：&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;&lt;span class=&#34;hljs-type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;                 &lt;span class=&#34;hljs-comment&#34;&gt;//初始化函数，只会在开发板上电或复位时被调用一次&lt;/span&gt;&lt;br&gt;&amp;#123; &lt;br&gt;  pinMode(&lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;, OUTPUT);       &lt;span class=&#34;hljs-comment&#34;&gt;//初始化 IO12 为输出口&lt;/span&gt;&lt;br&gt;  pinMode(&lt;span class=&#34;hljs-number&#34;&gt;13&lt;/span&gt;, OUTPUT);       &lt;span class=&#34;hljs-comment&#34;&gt;//初始化 IO13 为输出口&lt;/span&gt;&lt;br&gt;  digitalWrite(&lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;, LOW);     &lt;span class=&#34;hljs-comment&#34;&gt;//初始化设为低电平，则灯灭&lt;/span&gt;&lt;br&gt;  digitalWrite(&lt;span class=&#34;hljs-number&#34;&gt;13&lt;/span&gt;, LOW);     &lt;span class=&#34;hljs-comment&#34;&gt;//初始化设为低电平，则灯灭&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;loop&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;                  &lt;span class=&#34;hljs-comment&#34;&gt;//上电之后一直循环执行的函数&lt;/span&gt;&lt;br&gt;&amp;#123; digitalWrite(&lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;, HIGH);    &lt;span class=&#34;hljs-comment&#34;&gt;//亮左灯&lt;/span&gt;&lt;br&gt;  digitalWrite(&lt;span class=&#34;hljs-number&#34;&gt;13&lt;/span&gt;, LOW);     &lt;span class=&#34;hljs-comment&#34;&gt;//关右灯&lt;/span&gt;&lt;br&gt;  delay(&lt;span class=&#34;hljs-number&#34;&gt;1000&lt;/span&gt;);               &lt;span class=&#34;hljs-comment&#34;&gt;//等待1秒&lt;/span&gt;&lt;br&gt;  digitalWrite(&lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;, LOW);     &lt;span class=&#34;hljs-comment&#34;&gt;//关左灯&lt;/span&gt;&lt;br&gt;  digitalWrite(&lt;span class=&#34;hljs-number&#34;&gt;13&lt;/span&gt;, HIGH);    &lt;span class=&#34;hljs-comment&#34;&gt;//亮右灯&lt;/span&gt;&lt;br&gt;  delay(&lt;span class=&#34;hljs-number&#34;&gt;1000&lt;/span&gt;);               &lt;span class=&#34;hljs-comment&#34;&gt;//等待1秒&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;编译+上传即可。&lt;/p&gt;
&lt;p&gt;结果就不展示了，两个灯在交替闪烁。&lt;/p&gt;
</content>
        <category term="教程" />
        <category term="嵌入式开发" />
        <updated>2022-03-26T09:30:00.000Z</updated>
    </entry>
</feed>
