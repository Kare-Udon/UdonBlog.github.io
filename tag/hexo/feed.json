{
    "version": "https://jsonfeed.org/version/1",
    "title": "カレーうどん屋 • All posts by \"hexo\" tag",
    "description": "カレーうどん屋.",
    "home_page_url": "https://blog.udon.eu.org",
    "items": [
        {
            "id": "https://blog.udon.eu.org/archives/2e528779.html",
            "url": "https://blog.udon.eu.org/archives/2e528779.html",
            "title": "迁移 Hexo 渲染环境至 GitHub Actions",
            "date_published": "2022-05-23T11:30:00.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><p>本博客使用的是 Hexo 静态博客框架，我将渲染环境搭建在家中 NAS 之上，部署了一个 Ubuntu Docker 并安装好了 Node.js 环境，正常使用了一两年。</p>\n<p>上周末，写完新文章的我心血来潮，打算在更新博客的时候顺便更新一下老旧的 Node 和 Hexo（Node 12, Hexo 5.2）。</p>\n<p>一番折腾之后，以 npm 和 hexo 环境全部被破坏（事后想想也许只是环境变量掉了）的下场结束。</p>\n<p>鉴于 NAS 性能低下，更新一次 node module 都需要 30 分钟，我放弃了在 NAS 上重新部署渲染环境的念头，转而使用 GitHub Actions 渲染，并同时部署于 GitHub Pages 与 CloudFlare Pages。</p>\n<h2 id=\"将渲染环境迁至-GitHub-Actions\"><a href=\"#将渲染环境迁至-GitHub-Actions\" class=\"headerlink\" title=\"将渲染环境迁至 GitHub Actions\"></a>将渲染环境迁至 GitHub Actions</h2><p>不久之前，CloudFlare Pages 悄悄下架了 Hexo 框架的部署功能，只能用 GitHub Actions 渲染，然后再部署至 CloudFlare Pages 了。</p>\n<h3 id=\"项目结构的修改\"><a href=\"#项目结构的修改\" class=\"headerlink\" title=\"项目结构的修改\"></a>项目结构的修改</h3><p>若想使用 GitHub Actions，需要将博客的源码上传至 GitHub。考虑到隐私和安全的问题，建议创建一个私有仓库管理源码。</p>\n<p>对于项目没有什么需要修改的，因为 Actions 渲染的流程和本地渲染的流程没有区别。</p>\n<p>唯一需要改动的，是引入的主题。由于两个 Git 仓库不能嵌套，我们需要以 Git submodule 的形式引入主题仓库。</p>\n<p>我使用的是 Fluid 主题。采用 <a href=\"https://hexo.fluid-dev.com/docs/guide/#%E8%A6%86%E7%9B%96%E9%85%8D%E7%BD%AE\">覆盖配置</a> 的方法，即在根目录之下有一份配置会覆盖主题内的配置文件，便于在 Actions 中渲染。</p>\n<p>以下也将以 Fluid 为例，请根据你使用的主题修改命令或代码。</p>\n<p>首先，删除原来的主题（若使用的是主题内的配置，注意备份配置文件！）</p>\n<p>返回博客源码的根目录，执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git submodule add https://github.com/fluid-dev/hexo-theme-fluid.git themes/fluid<br></code></pre></td></tr></table></figure>\n\n<p>末尾的 <code>themes/fluid</code> 为此 submodule 在项目中的位置与名字，与先前本地渲染时的配置相同即可。</p>\n<p>删除子模块的过程较为繁琐，请参考网上的文章进行操作。</p>\n<p>在 Clone 此项目时，submodule 默认不会被下载，需要使用指令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git submodule update --init --recursive<br></code></pre></td></tr></table></figure>\n\n<p>下载 submodule。在下面会提到的 Actions 配置文件中会出现这条指令。</p>\n<p>接着，就可以将博客源码上传至 GitHub。</p>\n<h3 id=\"GitHub-Actions-相关文件\"><a href=\"#GitHub-Actions-相关文件\" class=\"headerlink\" title=\"GitHub Actions 相关文件\"></a>GitHub Actions 相关文件</h3><p>在博客源码根目录创建 <code>.github/workflows/submit.yml</code> 和 <code>.github/script/blog-update.sh</code> 两个文件，填入下列代码。</p>\n<p>以下代码参考文章 <a href=\"https://blog.kukmoon.com/f8bb4ee.html#23-%E7%BC%96%E5%86%99-workflow\">GitHub Actions 自动部署 Hexo 博客到 cPanel 虚拟主机 - 谷中望月</a>，有所修改。</p>\n<p><code>submit.yml</code>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">CI</span><br><br><span class=\"hljs-comment\"># 监听 main 分支的改动与 Release 的发布</span><br><span class=\"hljs-attr\">on:</span><br>  <span class=\"hljs-attr\">push:</span><br>    <span class=\"hljs-attr\">branches:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">main</span><br>  <span class=\"hljs-attr\">release:</span><br>    <span class=\"hljs-attr\">types:</span> [<span class=\"hljs-string\">published</span>]<br><br><span class=\"hljs-comment\"># 自定义环境变量</span><br><span class=\"hljs-attr\">env:</span><br>  <span class=\"hljs-attr\">GIT_USER:</span> <span class=\"hljs-string\">Lao-Liu233</span>  <span class=\"hljs-comment\"># 改成你自己的 GitHub 用户名</span><br>  <span class=\"hljs-attr\">GIT_EMAIL:</span> <span class=\"hljs-string\">blog@udon.eu.org</span>  <span class=\"hljs-comment\"># 改成你自己的 GitHub 注册邮箱</span><br><br><span class=\"hljs-attr\">jobs:</span><br>  <span class=\"hljs-attr\">build:</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Build</span> <span class=\"hljs-string\">on</span> <span class=\"hljs-string\">node</span> <span class=\"hljs-string\">$&#123;&#123;</span> <span class=\"hljs-string\">matrix.node_version</span> <span class=\"hljs-string\">&#125;&#125;</span> <span class=\"hljs-string\">and</span> <span class=\"hljs-string\">$&#123;&#123;</span> <span class=\"hljs-string\">matrix.os</span> <span class=\"hljs-string\">&#125;&#125;</span><br>    <span class=\"hljs-attr\">runs-on:</span> <span class=\"hljs-string\">ubuntu-latest</span><br>    <span class=\"hljs-attr\">strategy:</span><br>      <span class=\"hljs-attr\">matrix:</span><br>        <span class=\"hljs-attr\">os:</span> [<span class=\"hljs-string\">ubuntu-latest</span>]<br>        <span class=\"hljs-attr\">node_version:</span> [<span class=\"hljs-number\">16.15</span>]  <span class=\"hljs-comment\"># 改成你本地的 Node.js 版本，可以用 `node --version` 命令查询</span><br><br>    <span class=\"hljs-attr\">steps:</span><br>      <span class=\"hljs-comment\"># 获取博客源码</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Checkout</span><br>        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/checkout@v2</span><br>      <br>      <span class=\"hljs-comment\"># 用 Node.js 渲染</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Use</span> <span class=\"hljs-string\">Node.js</span> <span class=\"hljs-string\">$&#123;&#123;</span> <span class=\"hljs-string\">matrix.node_version</span> <span class=\"hljs-string\">&#125;&#125;</span><br>        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/setup-node@v1</span><br>        <span class=\"hljs-attr\">with:</span><br>          <span class=\"hljs-attr\">node-version:</span> <span class=\"hljs-string\">$&#123;&#123;</span> <span class=\"hljs-string\">matrix.node_version</span> <span class=\"hljs-string\">&#125;&#125;</span><br><br>      <span class=\"hljs-comment\"># 安装 Hexo-cli    </span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Install</span> <span class=\"hljs-string\">hexo</span><br>        <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">|</span><br><span class=\"hljs-string\">          npm install -g hexo-cli</span><br><span class=\"hljs-string\"></span><br>      <span class=\"hljs-comment\"># 安装依赖</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Install</span> <span class=\"hljs-string\">dependencies</span>    <br>        <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">|</span><br><span class=\"hljs-string\">          npm install</span><br><span class=\"hljs-string\"></span><br>      <span class=\"hljs-comment\"># 导入 submodule</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Clone</span> <span class=\"hljs-string\">submodule</span><br>        <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">|</span><br><span class=\"hljs-string\">          git submodule update --init --recursive</span><br><span class=\"hljs-string\"></span><br>      <span class=\"hljs-comment\"># 配置环境</span><br>      <span class=\"hljs-comment\"># ssh-kenscan github.com &gt;&gt; ~/.ssh/known_hosts   # 从 GitHub 获取公钥并保存到 known_hosts 文件</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Configuration</span> <span class=\"hljs-string\">environment</span><br>        <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">|</span><br><span class=\"hljs-string\">          sudo timedatectl set-timezone &quot;Asia/Shanghai&quot;</span><br><span class=\"hljs-string\">          mkdir -p ~/.ssh/</span><br><span class=\"hljs-string\">          echo &quot;$HEXO_DEPLOY_PRI&quot; &gt; ~/.ssh/id_rsa</span><br><span class=\"hljs-string\">          chmod 600 ~/.ssh/id_rsa</span><br><span class=\"hljs-string\">          ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span><br><span class=\"hljs-string\">          git config --global user.name $GIT_USER</span><br><span class=\"hljs-string\">          git config --global user.email $GIT_EMAIL</span><br><span class=\"hljs-string\"></span><br>      <span class=\"hljs-comment\"># 生成并部署</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Deploy</span> <span class=\"hljs-string\">hexo</span><br>        <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">|</span><br><span class=\"hljs-string\">          hexo clean</span><br><span class=\"hljs-string\">          hexo g -d</span><br><span class=\"hljs-string\"></span><br>      <span class=\"hljs-comment\"># 部署后更新博客源码，用于添加 abbrlink，如果不用 abbrlink，需要删除</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Update</span> <span class=\"hljs-string\">Blog</span><br>        <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">|</span><br>          <span class=\"hljs-string\">sh</span> <span class=\"hljs-string\">&quot;$&#123;GITHUB_WORKSPACE&#125;/.github/script/blog-update.sh&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p><code>.github/script/blog-update.sh</code>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-meta\">#!/bin/sh</span><br><br><span class=\"hljs-keyword\">if</span> [ -z <span class=\"hljs-string\">&quot;<span class=\"hljs-subst\">$(git status --porcelain)</span>&quot;</span> ]; <span class=\"hljs-keyword\">then</span><br>    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;nothing to update.&quot;</span><br><span class=\"hljs-keyword\">else</span><br>    git add <span class=\"hljs-built_in\">source</span>/_posts/\t<span class=\"hljs-comment\">#仅对文章源码所在文件夹进行修改</span><br>    git commit -m <span class=\"hljs-string\">&quot;triggle by commit <span class=\"hljs-variable\">$&#123;GITHUB_SHA&#125;</span>&quot;</span> -a<br>    git push origin main<br><span class=\"hljs-keyword\">fi</span><br></code></pre></td></tr></table></figure>\n\n<p>Commit + Push，打开 Actions 界面，就能看到正在运行的 Action 啦。</p>\n<p>不出意外，Action 成功执行，1分钟内博客就能渲染成功、部署至 GitHub Pages。</p>\n<h2 id=\"同时部署至-CloudFlare-Pages\"><a href=\"#同时部署至-CloudFlare-Pages\" class=\"headerlink\" title=\"同时部署至 CloudFlare Pages\"></a>同时部署至 CloudFlare Pages</h2><p>步骤较为简单，我简述一下。</p>\n<p>打开 CloudFlare Pages， 连接至存放 <strong>渲染后</strong> 的静态文件的仓库，渲染的框架选择 <strong>None</strong>，执行的指令填写 <code>exit 0;</code> 就可以了。</p>\n<p>执行部署后，渲染后的静态文件就被部署至 CloudFlare Pages 啦。</p>\n",
            "tags": [
                "教程",
                "GitHub Actions",
                "Hexo"
            ]
        }
    ]
}